


    //1 Login with valid credentials
    //2 Login with invalid usewrname ... password valid
    //3 Login with valid username ... invalid password
    //4 Login with both invalid username and password
    // Login with blank credentials
    //open the baseurl
    // enter the registered username
    //enter the password
    //Click SignIn button


// Generated by Selenium IDE

        import org.testng.Assert;
import org.testng.annotations.Optional;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
    public class LoginFormTest  extends BaseTest {


        //all required elements to login are available
        @Test (priority = 1)
        
        public void allRequiredElementsAreDisplayed() {
        	System.out.println("Checking all LOGIN required elements have been displayed....");
            homePage.getclickSignInLink().click();
            //Assert.assertTrue(createAccount_SignIn.getLoginFormIsDisplayed().isDisplayed());
            Assert.assertTrue(createAccount_SignIn.getLoginEmailAddressField().isDisplayed());
            Assert.assertTrue(createAccount_SignIn.getPasswordFieldisDisplayed().isDisplayed());
            Assert.assertTrue(createAccount_SignIn.getSubmitButtonIsDisplayed().isDisplayed());
        }

        
        //Login with valid  credentials
        @Test(priority = 2)
        @Parameters({"validUsername","validPassword"})
        public void loginWithValidCredentials(String validUsername, String validPassword ){
            createAccount_SignIn.getAllFieldsCleared();
            createAccount_SignIn.getLoginEmailAddressField().sendKeys(validUsername);
            createAccount_SignIn.getPasswordFieldisDisplayed().sendKeys(validPassword);
            createAccount_SignIn.getSubmitButtonIsDisplayed().click();
            account.getAccountLogout().click();
        }


        //Login with Invalid usernamame
        @Test(priority = 3)
        @Parameters({"incorrectUsername", "validPassword"})
        public void loginWith_Incorrect_Username(String incorrectUsername, String validPassword){
            createAccount_SignIn.getAllFieldsCleared();
            createAccount_SignIn.getLoginEmailAddressField().sendKeys(incorrectUsername);
            createAccount_SignIn.getPasswordFieldisDisplayed().sendKeys(validPassword);
            createAccount_SignIn.getSubmitButtonIsDisplayed().click();
            Assert.assertTrue(createAccount_SignIn.getAuthenticationFailedError().isDisplayed());
        }

        //Login with Invalid password
        @Test(priority = 4)
        @Parameters({"validUsername", "invalidPassword"})
        public void loginWith_Incorrect_PassWord(String usern, String pass){
            createAccount_SignIn.getAllFieldsCleared();
            createAccount_SignIn.getLoginEmailAddressField().sendKeys(usern);
            createAccount_SignIn.getPasswordFieldisDisplayed().sendKeys(pass);
            createAccount_SignIn.getSubmitButtonIsDisplayed().click();
            Assert.assertTrue(createAccount_SignIn.getAuthenticationFailedError().isDisplayed());
        }

        //Login with Invalid usernamame
        @Test(priority = 5)
        public void loginWith_Invalid_Email_Address(){
            createAccount_SignIn.getAllFieldsCleared();
            createAccount_SignIn.getLoginEmailAddressField().sendKeys("onchari10010gmail.com");
            createAccount_SignIn.getPasswordFieldisDisplayed().sendKeys("28328719");
            createAccount_SignIn.getSubmitButtonIsDisplayed().click();
            Assert.assertTrue(createAccount_SignIn.getEmailInvalidError().isDisplayed());
        }

        //Login with blank email address
        @Test(priority = 6)
        public void loginWith_Blank_EmailAddress(){
            createAccount_SignIn.getAllFieldsCleared();
            createAccount_SignIn.getLoginEmailAddressField().sendKeys("");
            createAccount_SignIn.getPasswordFieldisDisplayed().sendKeys("283287719");
            createAccount_SignIn.getSubmitButtonIsDisplayed().click();
            Assert.assertTrue(createAccount_SignIn.getEmailRequiredError().isDisplayed());
        }

        //Login with blank password
        @Test(priority = 7)
        public void loginWith_Blank_Password(){
            createAccount_SignIn.getAllFieldsCleared();
            createAccount_SignIn.getLoginEmailAddressField().sendKeys("onchari1010@gmail.com");
            createAccount_SignIn.getPasswordFieldisDisplayed().sendKeys("");
            createAccount_SignIn.getSubmitButtonIsDisplayed().click();
            Assert.assertTrue(createAccount_SignIn.getPasswordRequiredError().isDisplayed());
        }

         }





